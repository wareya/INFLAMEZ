[gd_scene load_steps=14 format=2]

[ext_resource path="res://Sprites/scape.png" type="Texture" id=1]
[ext_resource path="res://Sprites/scapetop.png" type="Texture" id=2]
[ext_resource path="res://Sprites/scapebottom.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeVectorFunc" id=2]
function = 13

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 6, 6, 6 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 6, 6, 6 ) ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]

[sub_resource type="VisualShaderNodeColorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.15, 0.2 ) ]
operator = 1

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// ColorOp:9
	vec3 n_in9p1 = vec3(0.00000, 0.15000, 0.20000);
	vec3 n_out9p0 = abs(n_out7p0 - n_in9p1);

// VectorOp:5
	vec3 n_in5p1 = vec3(6.00000, 6.00000, 6.00000);
	vec3 n_out5p0 = n_out9p0 * n_in5p1;

// VectorOp:8
	vec3 n_in8p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out8p0 = n_out5p0 + n_in8p1;

// VectorFunc:4
	vec3 n_out4p0 = ceil(n_out8p0);

// VectorOp:6
	vec3 n_in6p1 = vec3(6.00000, 6.00000, 6.00000);
	vec3 n_out6p0 = n_out4p0 / n_in6p1;

// Output:0
	COLOR.rgb = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -443, 70 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 440, 200 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 140, 260 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -40, 60 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 240, 80 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -320, 220 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( -40, 240 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( -260, 80 )
nodes/fragment/connections = PoolIntArray( 4, 0, 6, 0, 5, 0, 8, 0, 8, 0, 4, 0, 7, 0, 9, 0, 6, 0, 0, 0, 9, 0, 5, 0 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[sub_resource type="OpenSimplexNoise" id=10]
seed = 6835
octaves = 4
period = 16.0
persistence = 0.657
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=11]
flags = 3
width = 64
height = 32
noise = SubResource( 10 )

[node name="ParallaxBackground" type="ParallaxBackground"]

[node name="ParallaxLayer" type="ParallaxLayer" parent="."]
motion_scale = Vector2( 0.25, 0.25 )

[node name="Sprite" type="Sprite" parent="ParallaxLayer"]
visible = false
modulate = Color( 0.235294, 0.258824, 0.317647, 1 )
material = SubResource( 9 )
position = Vector2( -3, 0 )
texture = SubResource( 11 )
region_enabled = true
region_rect = Rect2( 0, 0, 2048, 2048 )

[node name="Sprite2" type="Sprite" parent="ParallaxLayer"]
position = Vector2( 0, 160 )
texture = ExtResource( 3 )
offset = Vector2( 0, 512 )
region_enabled = true
region_rect = Rect2( 0, 512, 3200, 1025 )

[node name="Sprite4" type="Sprite" parent="ParallaxLayer"]
position = Vector2( 0, -160 )
texture = ExtResource( 2 )
offset = Vector2( 0, -512 )
region_enabled = true
region_rect = Rect2( 0, 512, 3200, 1025 )

[node name="Sprite3" type="Sprite" parent="ParallaxLayer"]
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0, 0, 3200, 320 )
